'''
串列與元組是依序排列可以稱是序列資料結構，只要知道元素的特定位置，即可使用索引觀念取得元素內容。
這一章重點是介紹字典，它不是依序排列的資料結構，所以無法使用類似串列的索引[0, 1, 2, ... , n]




字典的定義

字典是一個非序列的資料結構，但是它的元素是用"鍵:值"方式配對儲存，再操作時是用鍵(key)取得值(value)的內容。
其實再真實的應用中我們是可以將字典資料結構當作正式的字典使用，查詢鍵時，就可以列出相對應的值內容
字典定義時，是將"鍵:值"方在大括號內{}，字典的語法格是如下:

mydict = {key1:value1, key2:value2, ... , keyn:valuen}

字典的鍵一般常用是字串或數字當作是鍵，在一個字典中不可有重複的鍵出現
字典的值可以是任何python的資料物件，所以可以是數值、字串、串列、字典... 等
'''

# Ch9_1.py 以水果行和麵店為例定義一個字典，同時列出字典。下列字典是設定水果一斤的價格，麵一碗的價格，最後使用type()列出字典資料型態。
fruits = {'西瓜':15, '香蕉':20, '水蜜桃':25}
noodles = {'牛肉麵':100, '肉絲麵':80, '陽春麵': 60}
print(fruits)
print(noodles)
# 列出字典的型態
print('字典fruits的資料型態是: ', type(fruits))

'''
再使用python設計打鬥遊戲時，玩家通常扮演腳色英雄，敵軍可以用字典方式儲存，例如: 可以用不同顏色的標記設定敵軍的小兵。
每一個敵軍的小兵給予一個分數，這樣可以由打死敵軍數量再統計遊戲得分，可以用下列方式定義字典內容。
'''

# Ch9_2.py 定義soldier0 字典 tag 和 score 是鍵，red 和 3 是值
soldier0 = {'tag':'red', 'score':3}
print(soldier0)

'''
上述定義紅色小兵，分數是3分，玩家打死紅色小兵分數得三分。
'''